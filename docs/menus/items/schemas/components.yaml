openapi: 3.0.0
components:
  schemas:
    MenuItem:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier for the menu item
          example: 1
        categoryId:
          type: integer
          description: ID of the category this item belongs to
          example: 1
        name:
          type: string
          description: Item's name
          example: "Spaghetti"
        description:
          type: string
          description: Item's description
          example: "Classic pasta with meat sauce."
        price:
          type: number
          format: float
          description: Price of the item
          example: 12000
        isExtra:
          type: boolean
          description: Whether the item is an extra
          example: false
        isAvailable:
          type: boolean
          description: Whether the item is available
          example: true
        imageUrl:
          type: string
          description: URL of the item's image
          example: "https://example.com/images/spaghetti.jpg"
        createdAt:
          type: string
          format: date-time
          description: Creation timestamp
          example: "2024-01-15T10:30:00Z"
        updatedAt:
          type: string
          format: date-time
          description: Last update timestamp
          example: "2024-01-15T10:30:00Z"
        deleted:
          type: boolean
          description: Whether the item is deleted (soft delete)
          example: false
        deletedAt:
          type: string
          format: date-time
          nullable: true
          description: Deletion timestamp, if deleted
          example: null

    CreateItemRequest:
      type: object
      required:
        - name
        - description
        - categoryId
        - price
        - isExtra
        - isAvailable
        - imageUrl
      properties:
        name:
          type: string
          description: Item's name
          example: "Spaghetti"
        description:
          type: string
          description: Item's description
          example: "Classic pasta with meat sauce."
        categoryId:
          type: integer
          description: ID of the category this item belongs to
          example: 1
        price:
          type: number
          format: float
          description: Price of the item
          example: 12000
        isExtra:
          type: boolean
          description: Whether the item is an extra
          example: false
        isAvailable:
          type: boolean
          description: Whether the item is available
          example: true
        imageUrl:
          type: string
          description: URL of the item's image
          example: "https://example.com/images/spaghetti.jpg"

    MenuItemResponse:
      type: object
      properties:
        success:
          type: boolean
          description: Indicates if the request was successful
          example: true
        message:
          type: string
          description: Response message
          example: "Item created successfully"
        data:
          $ref: "#/components/schemas/MenuItem"

    MenuItemListResponse:
      type: object
      properties:
        success:
          type: boolean
          description: Indicates if the operation was successful
          example: true
        message:
          type: string
          description: Descriptive message about operation
          example: "Menu Items fetched successfully"
        data:
          type: array
          items:
            $ref: "#/components/schemas/MenuItem"
          description: Array of Menu Items objects
        meta:
          type: object
          properties:
            page:
              type: integer
              description: Current page number
              example: 1
            limit:
              type: integer
              description: Number of items per page
              example: 10
            total:
              type: integer
              description: Total number of Menu Items
              example: 25
            totalPages:
              type: integer
              description: Total number of pages
              example: 3
          description: Pagination metadata

    ErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          description: Indicates if the request was successful
          example: false
        message:
          type: string
          description: Error message
          example: "Invalid request parameters"
        error:
          type: string
          description: Error type
          example: "BAD_REQUEST"
        errors:
          type: array
          items:
            type: object
            properties:
              field:
                type: string
                description: Field that caused the error
                example: "name"
              message:
                type: string
                description: Error message for the field
                example: "Name must be at least 3 characters long"
