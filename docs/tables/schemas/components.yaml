openapi: 3.0.0
components:
  schemas:
    CreateTableRequest:
      type: object
      required:
        - number
      properties:
        number:
          type: string
          minLength: 1
          maxLength: 50
          description: Table number or identifier (must be unique)
          example: "T1"
        status:
          type: string
          enum: [available, occupied, reserved, maintenance]
          default: "available"
          description: Initial status of the table
          example: "available"
        location:
          type: string
          maxLength: 200
          nullable: true
          description: Physical location or area of the table
          example: "Window side"
        description:
          type: string
          maxLength: 500
          nullable: true
          description: Additional description or notes about the table
          example: "Table by the window with garden view"

    TableResponse:
      type: object
      properties:
        success:
          type: boolean
          description: Indicates if the operation was successful
          example: true
        message:
          type: string
          description: Descriptive message about the operation
          example: "Table created successfully"
        data:
          $ref: "./table.yaml#/components/schemas/Table"
          description: Table object

    TableListResponse:
      type: object
      properties:
        success:
          type: boolean
          description: Indicates if the operation was successful
          example: true
        message:
          type: string
          description: Descriptive message about the operation
          example: "Tables fetched successfully"
        data:
          type: array
          items:
            $ref: "./table.yaml#/components/schemas/Table"
          description: Array of table objects
        meta:
          type: object
          properties:
            page:
              type: integer
              description: Current page number
              example: 1
            limit:
              type: integer
              description: Number of items per page
              example: 10
            total:
              type: integer
              description: Total number of tables
              example: 25
            totalPages:
              type: integer
              description: Total number of pages
              example: 3
          description: Pagination metadata

    ErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          description: Indicates if the operation was successful
          example: false
        message:
          type: string
          description: Error message describing what went wrong
          example: "Table not found"
        error:
          type: string
          description: Error code for programmatic handling
          example: "NOT_FOUND"
        details:
          type: object
          nullable: true
          description: Additional error details (optional)
          example:
            field: "number"
            value: "T1"
            constraint: "unique"

    DeleteResponse:
      type: object
      properties:
        success:
          type: boolean
          description: Indicates if the operation was successful
          example: true
        message:
          type: string
          description: Descriptive message about the operation
          example: "Table deleted successfully"
        data:
          type: object
          properties:
            id:
              type: integer
              description: ID of the deleted table
              example: 1
            number:
              type: string
              description: Number of the deleted table
              example: "T1"
          description: Information about the deleted table

    UpdateTableRequest:
      type: object
      properties:
        number:
          type: string
          minLength: 1
          maxLength: 50
          description: Updated table number or identifier (must be unique)
          example: "T1A"
        status:
          type: string
          enum: [available, occupied, reserved, maintenance]
          description: Updated status of the table
          example: "occupied"
        location:
          type: string
          maxLength: 200
          description: Updated physical location or area of the table
          example: "Garden view"
        description:
          type: string
          maxLength: 500
          description: Updated description or notes about the table
          example: "Updated table description"

    UpdateTableStatusRequest:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          enum: [available, occupied, reserved, maintenance]
          description: New status for the table
          example: "occupied"
